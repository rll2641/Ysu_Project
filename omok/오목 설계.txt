오목 프로그램 프로젝트

1. 게임다워 보이는 인트로 설정.

   ->printf함수를 이용하여 그럴듯한 인트로 만들기
   ->입력을 받는 함수 따로만들기 non-buffer로 입력받는
    _getch()함수(conio.h)를 이용해서 깨끗한 인트로 만들기

2. 2차원 배열을 이용해 정사각형 모양의 오목판 만들기.

   ->전역변수로 오목판 20x20 설정. 
      
3. 오목판에 흑돌생성(방향키와 상호작용을 해야함)

4. 키 입력시 돌을 이동하고 멈추게해야함.

   ->방향키로 X,Y좌표이동 엔터키로 돌 위치 확정

5. 돌이 굳으면 플래그를 이용해서 흑돌->흰돌->흑돌 이렇게 플래그지정

6. 돌이 오목판 밖을 못빠져나가게 해야함

   ->오목판의 인덱스안에서만 움직일수있게 조건문제시

7. 오목의 룰과 같이 대각선,가로,세로줄로 돌이 5개가 될시 게임오버

8. 여유가 있을시 조건부여 (삼삼x)

특수문자의 크기가 2바이트라서 x좌표로 10이동 시 블록5개를이동함
총블록의개수는 20*20개 따라서 벽을 제외한 정중앙은 x=19,y=9


->엔터키를누르면 현재 돌의 x,y좌표에 map[y][x] = black을 저장하면 돌이 고정된다.

문제점 1 흰돌저장인지,흑돌저장인지 모름 따라서 3차원배열을 이용하는것도 고려해봐야함.
ex) if(color == 1)
	map[color][y][x/2-1] = black
    else
	map[color][y]][x/2-1] = white
->방향키 입력시 

처음에 흑돌을 생성한뒤 방향키를 누르면 그 인덱스값으로 가서
다시 맵하고 돌을 출력하는 방식

draw_stone이라는 함수에서 흑돌과 백돌을 현재위치에 출력하고싶다.

인덱스 값을 활용하여 인덱스의값이 5개가 연속으로 black or white일시
게임종료.
가로
-> for(i<20;)
	for(j<20)
		if(map[i][j] = black && map[i][j+1]=black && *** && map[i][j+4]=black


       o(10,10) y축 정방향 x는 반대방향
      o(9,11)
     o(8,12)