오늘 발표할 주제는 은행시스템입니다. 저번 중간고사에서는 메인메모리에 정보를 저장하여
프로그램이 종료되면 정보도 같이 사라지는 프로그램을 발표했었는데 오늘은 파일을 이용해서
프로그램이 종료가 돼도 정보가 파일에 저장되서 다시 실행하더라도 보존되어있는 프로그램을 발표해보도록 하겠습니다.

먼저 읽기 쉽게 파일을 분할했습니다. 각 파일은 은행프로그램의 기능으로 분할이 되어 있고
각 파일마다 헤더파일이 있습니다. 

뱅크메뉴헤더파일을 보시면 첫번째 행은 비주얼스튜디오에서 제공하는 간편한 전처리기로써, 어떠한 코드나 헤더파일이 다른 코드나 헤더에서 포함 될때, 중복되어 복사되는 것을 방지하는 기능을 합니다. 다음으로 인클루드 선언과 함수선언이 있습니다. 

뱅크메뉴를 보시면 제가만든 헤더파일을 포함하고 단순히 출력을 담당합니다.

다음은 뱅크사인업헤더파일입니다. 3,4번행은 비쥬얼스튜디오 오류를 무시하기위해 썼고
각각의 인클루드 선언,매크로 정의, 구조체 선언, 함수선언으로 이루어져 있습니다.

뱅크사인업은 로그인 및 회원가입 등을 담고있는 파일입니다. 
전역변수로 인트형변수가 선언 및 초기화 되었고 examine_overlap함수는 구조체 포인터변수와 파일 포인터변수를 매개변수로 받아 매크로로 정의된 true,false 두개중하나를 리턴하는 함수입니다.
시간절약을 위해 중요한 것들만 설명하겠습니다. fopen을 통해 읽기모드로 열어줍니다. fread함수를 보시면 쉽게말해 fp에서 읽은 것을 max_client갯수만큼 구조체의 크기만큼 세이브변수에 저장합니다. 그리고 읽은 갯수를 반환합니다. 18번행은 strcmp함수를 이용해서 입력한 아이디와 파일에 저장되어있는 아이디가 같으면 true를 리턴 아니면 false를 리턴합니다.
create_account는 rand를 이용해 계좌를 생성해주고 돈을 초기화해주었습니다.
signup함수는 입력받은것을 파일에 저장해주는 함수입니다. fopen을 통해 쓰기모드로 열어줍니다. 
fwrite를 이용해서 client변수를 구조체 크기만큼 1개를 fp에 저장해주고 파일을 닫아줍니다. 
login함수는 파일에 있는 정보를 지역변수에 담고 입력한 정보와 비교해주고 성공시
그 사용자의 인덱스 값을 반환해주는 함수입니다.위와 똑같이 fread와 strcmp를 이용해주었습니다. 

뱅크펑션헤더파일을 보시면 아까 소개한 헤더파일들을 인클루드 하고 함수를 선언해주었습니다.

뱅크펑션은 은행시스템의 주요기능인 입출금,계좌이체,계좌조회를 담고있는 파일입니다.
deposit함수는 아까 로그인함수에서의 사용자인덱스를 매개변수로 받습니다. 그럼 그사람만의
구조체 변수를 활용할 수 있습니다. 파일을 읽기모드로 열어 save에 저장 해준뒤 
입금할 금액을 입력하고 그 사용자의 인덱스를 이용해 금액을 수정합니다. 다시 파일을
쓰기모드로 열어 save에 있는 정보를 다시 파일에 써줍니다.
withdraw함수는 입금함수랑 동일하니 넘어가도록 하겠습니다.
track_account함수는 파일을 읽기모드로열어 save에 저장후 사용자 인덱스를 이용해
계좌번호 및 금액을 보여줍니다.
find_account함수는 매개변수로 인트형 변수를 받아 그 값을 파일에 있는 값과 비교해서
그 사람의 인덱스를 반환해줍니다.
remittance함수는 지금 로그인한 사용자의 인덱스를 매개변수로 받고 찾고싶은 계좌번호를
입력하고 있을 시 find_account함수의 반환값으로 상대방의 인덱스를 이용해 이체금액을 
연산해줍니다. 아까 deposit함수에서 봤던 읽기모드와 쓰기모드를 활용해서 수정해주었습니다.

뱅크메뉴파일은 main함수를 통해 프로그램을 실행해주는 코드를 썻습니다. 
어려운건 아니니 넘어가도록하겠습니다.

이제프로그램을 실행해겠습니다.






